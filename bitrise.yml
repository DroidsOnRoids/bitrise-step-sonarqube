format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  test:
    before_run:
    - test-java-version-warning
    - _start_server
    after_run:
    - test-default-version
    - test-explicit-version

  test-java-version-warning:
    description: "Test if java version warning is shown"
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            JAVA_VERSION_MAJOR=$(java -version 2>&1 | grep -i version | sed 's/.*version ".*\.\(.*\)\..*"/\1/; 1q')
            if [ "${JAVA_VERSION_MAJOR}" -lt "8" ]; then
              mkfifo fifo
              bash step.sh >fifo &
              grep -m1 'Version "7" has been detected' fifo
              kill $!
              rm fifo
            fi

  test-explicit-version:
    description: "Test with explicit scanner version"
    before_run:
    - _prepare_environment
    steps:
    - path::./:
        title: Step Test
        run_if: true
        inputs:
        - scanner_version: "3.0.0.702"
        - scanner_properties: |-
            sonar.sources=.
            sonar.java.binaries=.
            sonar.projectKey=test
            sonar.analysis.mode=preview
            sonar.report.export.path=sonar-report.json

  test-default-version:
    description: "Test with default, implicit scanner version"
    before_run:
    - _prepare_environment
    steps:
    - path::./:
        title: Step Test
        run_if: true
        inputs:
        - scanner_properties: |-
            sonar.sources=.
            sonar.java.binaries=.
            sonar.projectKey=test
            sonar.analysis.mode=preview
            sonar.report.export.path=sonar-report.json
  
  _start_server:
    steps:  
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            SERVER_VERSION=7.0
            JAVA_VERSION_MAJOR=$(java -version 2>&1 | grep -i version | sed 's/.*version ".*\.\(.*\)\..*"/\1/; 1q')

            case "$(uname -s)" in
              Darwin)
                SONAR_ARCH="macosx-universal-64"
                if [ "${JAVA_VERSION_MAJOR}" -lt "8" ]; then
                  brew install caskroom/cask/java
                fi
              ;;
              Linux)
                SONAR_ARCH="linux-x86-64"
                if [ "${JAVA_VERSION_MAJOR}" -lt "8" ]; then
                  add-apt-repository -y ppa:openjdk-r/ppa
                  apt-get update
                  apt-get -y install openjdk-8-jre-headless
                  update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
                fi
              ;;
              *)
                echo "Unsupported OS"
                exit 1
              ;;
            esac

            cd $(mktemp -d)
            wget https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SERVER_VERSION}.zip -O sonar-server.zip
            unzip sonar-server.zip

            sonarqube-${SERVER_VERSION}/bin/${SONAR_ARCH}/sonar.sh start

            echo "Waiting for server to start"
            while ! curl --output /dev/null --silent --head http://localhost:9000
            do
              sleep 0.5
            done
            echo "Waiting for server to finish starting"
            ( tail -f -n0 sonarqube-${SERVER_VERSION}/logs/sonar.log & ) | grep -q "SonarQube is up"

  _prepare_environment:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf ./_tmp
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - generate-text-file:
        inputs:
        - file_name: Test.java
        - file_content: |-
            public class Test {
            }

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: git@github.com:DroidsOnRoids/bitrise-steplib.git
      - STEP_ID_IN_STEPLIB: sonarqube-scanner
      - STEP_GIT_VERION_TAG_TO_SHARE: 1.0.2
      - STEP_GIT_CLONE_URL: https://github.com/DroidsOnRoids/bitrise-step-sonarqube-scanner.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            STEP_GIT_VERION_TAG_TO_SHARE=$(git describe --tags $(git rev-list --tags --max-count=1))
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish

